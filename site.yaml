---
- name: Setup to build Alpine Linux packages
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    ansible_python_interpreter: /usr/bin/python3
    mirror: http://dl-cdn.alpinelinux.org/alpine
    packages:
      alpine-sdk: for the abuild commmand
      lua-aports: for the buildrepo command
      tree: to create index.html
  tasks:
    - name: Install packages (clobbers any changes to /etc/abuild.conf)
      apk: { name: "{{ packages.keys() | list }}" }
      become: true
    - name: Make repositories available for dependencies
      copy:
        dest: /etc/apk/repositories
        content: |
          {{ mirror }}/edge/main
          {{ mirror }}/edge/community
          {{ mirror }}/edge/testing
      become: true
    - name: Fetch repository indexes
      apk: { update_cache: yes }
      become: true

- name: Setup to build Alpine Linux packages inside a container
  hosts: |-
    {{ lookup('file', '/proc/1/cgroup') is search('docker|lxc') |
       ternary('localhost', '') }}
  connection: local
  gather_facts: no
  vars:
    ansible_python_interpreter: /usr/bin/python3
    private_key: "{{ (public_key|basename|splitext)[0]|realpath }}"
    public_key: "{{ lookup('fileglob', 'packages/*.rsa.pub') }}"
  tasks:
    - name: Check that a private key is available in the environment
      assert: { that: "{{ lookup('env', 'abuild_key')|length > 0 }}" }
    - name: Check that a public key is available in the repository
      assert: { that: "{{ public_key|join('') is file }}" }
    - name: Save the private key to disk
      copy:
        dest: "{{ private_key }}"
        content: "{{ lookup('env', 'abuild_key') }}\n"
    - name: /etc/abuild.conf (installed above) points to private key
      lineinfile:
        path: /etc/abuild.conf
        create: yes
        line: PACKAGER_PRIVKEY='{{ private_key }}'
    - name: Install the public key so `apk index` succeeds
      copy:
        src: "{{ public_key }}"
        dest: /etc/apk/keys/{{ public_key | basename }}
# vim: ft=yaml.ansible
